@using Forestry_test.ViewModels.AppointmentViewModel
@model AppointmentViewModel
@addTagHelper "*, Forestry_test"
@{
    ViewData["Title"] = "Index";
}
<br />
<br />
@Html.ActionLink("Создать", "Create")
<form method="get">
    <div class="form-inline">
        <label class="control-label">Название: </label>
        @Html.TextBox("firstName", Model.FilterViewModel.SelectedpointName, htmlAttributes: new { @class = "form-control" })
        <input type="submit" value="фильтр" class="btn-default" />
    </div>
    <br /><br />
</form>
<table class="table">
    <tr>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.PointIDSort)"
               asp-route-type="@(Model.FilterViewModel.SelectedpointName)">@Html.DisplayNameFor(model => model.Appointment.PointID)</a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.PointNameSort)"
               asp-route-type="@(Model.FilterViewModel.SelectedpointName)">@Html.DisplayNameFor(model => model.Appointment.PointName)</a>
        </th>
    </tr>
    @foreach (var rate in Model.Appointments)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => rate.PointID)</td>
            <td>@Html.DisplayFor(modelItem => rate.PointName)</td>
            <td>
                @Html.ActionLink("Изменить", "Edit", new { id = rate.PointID }, null) |
                @Html.ActionLink("Подробнее", "Details", new { id = rate.PointID }, null) |
                @Html.ActionLink("Удалить", "Delete", new { id = rate.PointID }, null)
            </td>
        </tr>

    }
</table>
<page-link page-model="Model.PageViewModel" page-action="Index"
           page-url-type="@(Model.FilterViewModel.SelectedpointName)"
           page-url-sortorder="@(Model.SortViewModel.Current)"></page-link>